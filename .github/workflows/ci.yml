name: CI

on:
  push:
    branches:
      - main
      - "feat/**"
  pull_request:

jobs:
  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
      - uses: dtolnay/rust-toolchain@1.71.1
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            .
      - name: cargo fmt
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
      - uses: dtolnay/rust-toolchain@1.71.1
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            .
      - name: cargo clippy
        run: cargo clippy --all-targets -- -D warnings -D missing_docs

  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
      - uses: dtolnay/rust-toolchain@1.71.1
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            .
      - name: cargo test (workspace)
        run: cargo test --workspace
      - name: PRNG golden regression (rmg-core)
        run: cargo test -p rmg-core --features golden_prng -- tests::next_int_golden_regression

  docs:
    name: Docs Guard
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Ensure execution plan and decision log were updated
        run: |
          set -euo pipefail
          base_ref="${{ github.event.pull_request.base.ref }}"
          git fetch origin "$base_ref" --depth=1
          changed=$(git diff --name-only "origin/${base_ref}"..."${{ github.sha }}")
          if [ -z "$changed" ]; then
            exit 0
          fi
          non_doc=$(echo "$changed" | grep -vE '(^docs/)|(\.md$)' || true)
          if [ -z "$non_doc" ]; then
            exit 0
          fi
          echo "Non-doc files changed:"
          echo "$non_doc"
          echo "$changed" | grep -Fx 'docs/execution-plan.md' >/dev/null || {
            echo 'docs/execution-plan.md must be updated when non-doc files change.';
            exit 1;
          }
          echo "$changed" | grep -Fx 'docs/decision-log.md' >/dev/null || {
            echo 'docs/decision-log.md must be updated when non-doc files change.';
            exit 1;
          }


  rustdoc:
    name: Rustdoc (warnings gate)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
      - uses: dtolnay/rust-toolchain@1.71.1
      - uses: Swatinem/rust-cache@v2
      - name: rustdoc warnings gate (rmg-core)
        run: RUSTDOCFLAGS="-D warnings" cargo doc -p rmg-core --no-deps
      - name: rustdoc warnings gate (rmg-geom)
        run: RUSTDOCFLAGS="-D warnings" cargo doc -p rmg-geom --no-deps
      - name: rustdoc warnings gate (rmg-ffi)
        run: |
          if [ -f crates/rmg-ffi/Cargo.toml ]; then RUSTDOCFLAGS="-D warnings" cargo doc -p rmg-ffi --no-deps; fi
      - name: rustdoc warnings gate (rmg-wasm)
        run: |
          if [ -f crates/rmg-wasm/Cargo.toml ]; then RUSTDOCFLAGS="-D warnings" cargo doc -p rmg-wasm --no-deps; fi

  audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.71.1
      - uses: Swatinem/rust-cache@v2
      - name: cargo audit
        uses: rustsec/audit-check@v1.5.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  deny:
    name: Dependency Policy (cargo-deny)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.71.1
      - uses: Swatinem/rust-cache@v2
      - name: Run cargo-deny
        uses: EmbarkStudios/cargo-deny-action@v1
