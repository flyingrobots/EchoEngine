name: CI

on:
  push:
    branches:
      - main
      - "feat/**"
  pull_request:

jobs:
  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            .
      - name: cargo fmt
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy
      - name: rustup override stable
        run: rustup toolchain install stable && rustup override set stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            .
      - name: cargo clippy
        env:
          RUSTUP_TOOLCHAIN: stable
        run: cargo clippy --all-targets -- -D warnings -D missing_docs

  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: rustup override stable
        run: rustup toolchain install stable && rustup override set stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            .
      - name: cargo test
        env:
          RUSTUP_TOOLCHAIN: stable
        run: cargo test
      - name: PRNG golden regression (rmg-core)
        run: cargo test -p rmg-core --features golden_prng -- tests::next_int_golden_regression

  docs:
    name: Docs Guard
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Ensure execution plan and decision log were updated
        run: |
          set -euo pipefail
          base_ref="${{ github.event.pull_request.base.ref }}"
          git fetch origin "$base_ref" --depth=1
          changed=$(git diff --name-only "origin/${base_ref}"..."${{ github.sha }}")
          if [ -z "$changed" ]; then
            exit 0
          fi
          non_doc=$(echo "$changed" | grep -vE '(^docs/)|(\.md$)' || true)
          if [ -z "$non_doc" ]; then
            exit 0
          fi
          echo "Non-doc files changed:"
          echo "$non_doc"
          echo "$changed" | grep -Fx 'docs/execution-plan.md' >/dev/null || {
            echo 'docs/execution-plan.md must be updated when non-doc files change.';
            exit 1;
          }
          echo "$changed" | grep -Fx 'docs/decision-log.md' >/dev/null || {
            echo 'docs/decision-log.md must be updated when non-doc files change.';
            exit 1;
          }

  msrv:
    name: MSRV (rmg-core @ 1.68)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
      - uses: dtolnay/rust-toolchain@1.68.0
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            .
      - name: cargo check (rmg-core)
        run: cargo check -p rmg-core --all-targets

  rustdoc:
    name: Rustdoc (rmg-core warnings gate)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: rustup override stable
        run: rustup toolchain install stable && rustup override set stable
      - uses: Swatinem/rust-cache@v2
      - name: rustdoc warnings gate
        env:
          RUSTUP_TOOLCHAIN: stable
        run: RUSTDOCFLAGS="-D warnings" cargo doc -p rmg-core --no-deps
