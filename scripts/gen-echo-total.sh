#!/usr/bin/env bash
set -euo pipefail

# Bash 4+ is required for associative arrays used in this script.
if [[ -z "${BASH_VERSINFO:-}" || ${BASH_VERSINFO[0]} -lt 4 ]]; then
  echo "gen-echo-total.sh requires bash>=4 (macOS: brew install bash)" >&2
  exit 2
fi

ROOT_DIR="$(cd "$(dirname "$0")/.." && pwd)"
DOCS_DIR="$ROOT_DIR/docs"
OUT_FILE="$DOCS_DIR/echo-total.md"

priority=(
  "docs-index.md"
  "architecture-outline.md"
  "execution-plan.md"
  "decision-log.md"
)

declare -A seen

{
  printf '# Echo Total Documentation Rollup\n\n'
  printf '> This file is generated by scripts/gen-echo-total.sh. Edit source docs under docs/, not this rollup.\n\n'
  echo '---'

  # Priority files first, if present
  for p in "${priority[@]}"; do
    f="$DOCS_DIR/$p"
    if [[ -f "$f" ]]; then
      seen["$f"]=1
      printf '\n\n# File: %s\n\n' "$p"
      cat "$f"
      printf '\n\n---\n'
    fi
  done

  # Then all other Markdown files at top-level docs/, alphabetically
  while IFS= read -r -d '' f; do
    [[ ${seen["$f"]+x} ]] && continue
    base="$(basename "$f")"
    [[ "$base" == "echo-total.md" ]] && continue
    printf '\n\n# File: %s\n\n' "$base"
    cat "$f"
    printf '\n\n---\n'
  done < <(find "$DOCS_DIR" -maxdepth 1 -type f -name "*.md" -print0 | LC_ALL=C sort -z)
} > "$OUT_FILE"

echo "Wrote $OUT_FILE"
